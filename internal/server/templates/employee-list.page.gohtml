{{template "base" .}}

{{define "title"}}
Employees
{{end}}

{{define "css"}}
<style>
    /* Menu */

    .datatable-column-filter-wrapper {
        position: absolute;
    }

    .datatable-column-filter-menu {
        background: #fff none repeat scroll 0 0;
        border-radius: 3px;
        margin: 0;
        min-width: 220px;
        padding: 5px 0;
        box-shadow: 0px 0px 10px 2px #aaa;
    }

    .datatable-column-filter-menu>li {
        list-style: none;
    }

    .datatable-column-filter-menu>li,
    .datatable-column-filter-menu>li>label {
        cursor: pointer;
    }
</style>

{{end}}

{{define "content"}}
<div class="container">
    <div class="row">
        <div class="col">
            <h1 class="text-center mt-4">Authors</h1>
        </div>
    </div>
    <div class="row">
        <div class="col">
            {{$res := index .Data "employees"}}
            <table class="table table-striped table-hover" id="data">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                    </tr>
                </thead>
                <tbody>
                    {{range $res}}
                    <tr>
                        <td>{{.ID}}</td>
                        <td>
                            <a href="/author/{{.ID}}">
                                {{.Name}}

                            </a>
                        </td>
                        <td>{{.Bio}}</td>
                    </tr>
                    {{end}}
                </tbody>
            </table>
        </div>
    </div>
</div>

{{end}}

{{define "js"}}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const dataTable = new simpleDatatables.DataTable("#data", {
            tableRender: (_data, table, type) => {
                if (type === "print") {
                    return table
                }
                const tHead = table.childNodes[0]
                const filterHeaders = {
                    nodeName: "TR",
                    childNodes: tHead.childNodes[0].childNodes.map(
                        (_th, index) => ({
                            nodeName: "TH",
                            childNodes: [
                                {
                                    nodeName: "INPUT",
                                    attributes: {
                                        class: "datatable-input",
                                        type: "search",
                                        "data-columns": `[${index}]`
                                    }
                                }
                            ]
                        })
                    )
                }
                tHead.childNodes.push(filterHeaders)
                return table
            },
        })

        simpleDatatables.addColumnFilter(dataTable)
    })

</script>

{{end}}